#+title: Lecture 1: The Lennard-Jones Potential
#+author: Devon Walker
#+EMAIL: devonw@andrew.cmu.edu
#+date: 2016-10-14

* The Lennard-Jones Potential

The Lennard-Jones (LJ) potential is perhaps the most commonly used potential in molecular dynamics simulations. It is used to describe the attractive and repulsive forces between two atoms.

\begin{align*}
V_{LJ}(r) = 4 \epsilon \Big[ \Big ( \frac{\sigma}{r} \Big)^{12} - \Big(\frac{\sigma}{r} \Big)^{6} \Big]
\end{align*}

$\epsilon$ is a constant energy, while $\sigma$ is a constant length, and they are both interaction-specific. We can remove these constants by using the dimensionless form of the potential.

\begin{align*}
V_{LJ}(r) = 4 \Big[ \Big ( \frac{1}{r^{\star}} \Big)^{12} - \Big(\frac{1}{r^{\star}} \Big)^{6} \Big]
\end{align*}

** References

- Lennard-Jones Potential. (2015). In /Chemistry LibreTexts/. http://chem.libretexts.org/Core/Physical_and_Theoretical_Chemistry/Physical_Properties_of_Matter/Atomic_and_Molecular_Properties/Intermolecular_Forces/Specific_Interactions/Lennard-Jones_Potential
- McGaughey, A. (2016) Dimensionless LJ Potential. https://acatar-cmu.hosted.panopto.com/Panopto/Pages/Viewer.aspx?id=f5159578-a214-4a69-8256-0570d7a76e0e


* Dimensionless LJ

We can calculate the energy using the dimensionless form of the LJ potential for a given distance.

#+ATTR_LATEX: :placement [H]
#+caption: LJ potential for several nobel gases.
#+label: lj-dim
[[./img/lj-dim.png]]

** Code

#+BEGIN_SRC python :results silent
import numpy as np
import matplotlib.pyplot as plt


def dim_LJ_energy(rstar):
    """Dimensionless form of the Lennard-Jones energy."""
    return 4. * ((1. / rstar**(12)) - (1. / rstar**6))


# Calculate energies over a range of distances
r_s = np.linspace(0.9, 2, 200)
u_s = [dim_LJ_energy(r) for r in r_s]


# Plot
plt.plot(r_s, u_s, label="$u^*$")
plt.plot(r_s, [0]*len(r_s), 'k--')
plt.xlabel('Atom-Atom Separation, $r^*$ (Dimensionless)')
plt.ylabel('Energy, $u^*$ (Dimensionless)')
plt.legend()
plt.xlim([0.9, 2])
plt.ylim([-2, 2])
plt.savefig("./img/lj-dim.png")
#+END_SRC


* Parameters for noble gases

We can also look at the previously determined parameters and calculate the non-dimensionless form of the LJ potential.

#+ATTR_LATEX: :placement [H]
#+caption: LJ parameters for noble gases.
#+name: parameter-table
| Compound | $\epsilon/k_B$ [K] | $\sigma$ [$10^{-12}$ m] |
|----------+--------------------+-------------------------|
| Ne       |              35.60 |                   274.9 |
| Ar       |              119.8 |                   340.5 |
| Kr       |              171.0 |                   360.0 |
| Xe       |              221.0 |                   410.0 |


** References

- de With, G. (2013). Liquid-State Physical Chemistry: Fundamentals, Modeling, and Applications. Retrieved October 13, 2016, from http://onlinelibrary.wiley.com/book/10.1002/9783527676750


* LJ for Noble Gases

We pull the data from the previous table directly into our code and then calculate the potential for each noble gas.

#+ATTR_LATEX: :placement [H]
#+caption: LJ potential for several nobel gases.
#+label: lj
[[./img/lj.png]]

** Code

#+BEGIN_SRC python :results silent :var table=parameter-table
import numpy as np
import matplotlib.pyplot as plt
from scipy.constants import Boltzmann as kb


def LJ_energy(r, eps, sigma):
    """Lennard-Jones energy."""
    return 4. * eps * ((sigma / r)**(12) - (sigma / r)**6)


### Select a row from the previous table
for row in table:
    # Parse table row
    compound = row[0]
    eps = row[1] * kb
    sigma = row[2] * 10**(-12)

    # Calculate energies over a range of distances
    r_s = np.linspace(1e-10, 7.5e-10, 200)
    u_s = [LJ_energy(r, eps, sigma) for r in r_s]

    # Plot
    plt.plot(r_s, u_s, label=compound)
    plt.plot(r_s, [0]*len(r_s), 'k--')

plt.xlabel('Atom-Atom Separation, $r$ (m)')
plt.ylabel('Energy, $u$ (J)')
plt.legend()
plt.xlim([2e-10, 7.5e-10])
plt.ylim([-0.35e-20, 0.2e-20])
plt.savefig("./img/lj.png")
#+END_SRC


* Options :noexport:
#+OPTIONS: num:nil
#+OPTIONS: reveal_center:nil
#+OPTIONS: reveal_control:t
#+OPTIONS: reveal_history:t
#+OPTIONS: reveal_keyboard:t
#+OPTIONS: reveal_progress:nil
#+OPTIONS: reveal_overview:t
#+OPTIONS: reveal_rolling_links:nil
#+OPTIONS: reveal_single_file:t
#+OPTIONS: reveal_slide_number:h.v
#+OPTIONS: reveal_width:1200 reveal_height:800
#+OPTIONS: toc:nil

#+REVEAL_EXTRA_CSS: ./org-example-presentation.css
#+REVEAL_HLEVEL: 1
#+REVEAL_MARGIN: 0.2
#+REVEAL_MAX_SCALE: 2.5
#+REVEAL_MIN_SCALE: 0.5
#+REVEAL_PLUGINS: (highlight notes)
#+REVEAL_THEME: cmu
#+REVEAL_TRANS: linear
#+REVEAL_ROOT: ../reveal.js

# Title screen
# Must set org-reveal-title-slide variable to "<h1>%t</h1><h3>An org-mode example lesson plan.</h3><hr><p>%a</p><p>%e</p>"
